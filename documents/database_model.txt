Tables:

Users - This table would store information about all users of the system, including professors, administrators, and IT staff. Each record would include fields such as user ID, first name, last name, email address, password, and user role.

Classes - This table would store information about all classes offered by the school, including class ID, class name, course code, start time, end time, and location.

Schedule - This table would store information about the schedule of each professor, including their schedule ID, the professor ID, the class ID, and the day and time of the class.

Check-in - This table would store information about each check-in event by the professors, including the check-in ID, the professor ID, the class ID, the date and time of the event, and the IP address and location of the device used for the event.

Check-out - This table would store information about each check-out event by the professors, including the check-out ID, the professor ID, the class ID, the date and time of the event, and the IP address and location of the device used for the event.

Notifications - This table would store information about each notification sent by the system, including the notification ID, the user ID, the notification type, the date and time of the notification, and the content of the notification.

Reports - This table would store information about each report generated by the system, including the report ID, the user ID, the report type, the date and time of the report, and the content of the report.


The Users table would have a one-to-many relationship with the Schedule table, as each professor could have multiple classes assigned to them.

The Users table would also have a one-to-many relationship with the Check-in and Check-out tables, as each professor could have multiple check-in and check-out events recorded for them.

The Users table would have a one-to-many relationship with the Notifications table, as each user could have multiple notifications sent to them.

The Users table would have a one-to-many relationship with the Reports table, as each user could have multiple reports generated for them.

The Classes table would have a one-to-many relationship with the Schedule table, as each class could have multiple professors assigned to it.

The addition of the Check-out table allows for tracking of both check-in and check-out events by professors, providing more comprehensive attendance tracking and ensuring that professors are meeting their teaching obligations.